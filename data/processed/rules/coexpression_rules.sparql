# Rule: Astrocytes_clique_1

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on clique of 10 co-expressed genes
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 0.9 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
         
    # Connect to all spatial points
    ?cell cell:includesSpatialPoint ?spatialPoint0 .
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
    ?cell cell:includesSpatialPoint ?spatialPoint3 .
    ?cell cell:includesSpatialPoint ?spatialPoint4 .
    ?cell cell:includesSpatialPoint ?spatialPoint5 .
    ?cell cell:includesSpatialPoint ?spatialPoint6 .
    ?cell cell:includesSpatialPoint ?spatialPoint7 .
    ?cell cell:includesSpatialPoint ?spatialPoint8 .
    ?cell cell:includesSpatialPoint ?spatialPoint9 .
    
}
WHERE {
    # Gene identifiers
        ?gene0 cell:hasGeneID ?gene0ID .
    ?gene1 cell:hasGeneID ?gene1ID .
    ?gene2 cell:hasGeneID ?gene2ID .
    ?gene3 cell:hasGeneID ?gene3ID .
    ?gene4 cell:hasGeneID ?gene4ID .
    ?gene5 cell:hasGeneID ?gene5ID .
    ?gene6 cell:hasGeneID ?gene6ID .
    ?gene7 cell:hasGeneID ?gene7ID .
    ?gene8 cell:hasGeneID ?gene8ID .
    ?gene9 cell:hasGeneID ?gene9ID .

    # Gene ID filters
    FILTER(?gene0ID = "CTNNA2" && ?gene1ID = "GPM6A" && ?gene2ID = "LSAMP" && ?gene3ID = "MALAT1" && ?gene4ID = "NPAS3" && ?gene5ID = "NRG3" && ?gene6ID = "NRXN1" && ?gene7ID = "PCDH9" && ?gene8ID = "RORA" && ?gene9ID = "SLC1A2")
    
    # Spatial points for each gene
    
    ?spatialPoint0 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene0 ;
                     cell:hasXCoordinate ?x0 ;
                     cell:hasYCoordinate ?y0 .
    
    ?spatialPoint1 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene1 ;
                     cell:hasXCoordinate ?x1 ;
                     cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene2 ;
                     cell:hasXCoordinate ?x2 ;
                     cell:hasYCoordinate ?y2 .
    
    ?spatialPoint3 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene3 ;
                     cell:hasXCoordinate ?x3 ;
                     cell:hasYCoordinate ?y3 .
    
    ?spatialPoint4 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene4 ;
                     cell:hasXCoordinate ?x4 ;
                     cell:hasYCoordinate ?y4 .
    
    ?spatialPoint5 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene5 ;
                     cell:hasXCoordinate ?x5 ;
                     cell:hasYCoordinate ?y5 .
    
    ?spatialPoint6 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene6 ;
                     cell:hasXCoordinate ?x6 ;
                     cell:hasYCoordinate ?y6 .
    
    ?spatialPoint7 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene7 ;
                     cell:hasXCoordinate ?x7 ;
                     cell:hasYCoordinate ?y7 .
    
    ?spatialPoint8 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene8 ;
                     cell:hasXCoordinate ?x8 ;
                     cell:hasYCoordinate ?y8 .
    
    ?spatialPoint9 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene9 ;
                     cell:hasXCoordinate ?x9 ;
                     cell:hasYCoordinate ?y9 .
    
    # Distance constraints
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x1, 2) + POW(?y0 - ?y1, 2)) AS ?dist0_1)
    FILTER(?dist0_1 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x2, 2) + POW(?y0 - ?y2, 2)) AS ?dist0_2)
    FILTER(?dist0_2 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x3, 2) + POW(?y0 - ?y3, 2)) AS ?dist0_3)
    FILTER(?dist0_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x4, 2) + POW(?y0 - ?y4, 2)) AS ?dist0_4)
    FILTER(?dist0_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x5, 2) + POW(?y0 - ?y5, 2)) AS ?dist0_5)
    FILTER(?dist0_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x6, 2) + POW(?y0 - ?y6, 2)) AS ?dist0_6)
    FILTER(?dist0_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x7, 2) + POW(?y0 - ?y7, 2)) AS ?dist0_7)
    FILTER(?dist0_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x8, 2) + POW(?y0 - ?y8, 2)) AS ?dist0_8)
    FILTER(?dist0_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x9, 2) + POW(?y0 - ?y9, 2)) AS ?dist0_9)
    FILTER(?dist0_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist1_2)
    FILTER(?dist1_2 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x3, 2) + POW(?y1 - ?y3, 2)) AS ?dist1_3)
    FILTER(?dist1_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x4, 2) + POW(?y1 - ?y4, 2)) AS ?dist1_4)
    FILTER(?dist1_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x5, 2) + POW(?y1 - ?y5, 2)) AS ?dist1_5)
    FILTER(?dist1_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x6, 2) + POW(?y1 - ?y6, 2)) AS ?dist1_6)
    FILTER(?dist1_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x7, 2) + POW(?y1 - ?y7, 2)) AS ?dist1_7)
    FILTER(?dist1_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x8, 2) + POW(?y1 - ?y8, 2)) AS ?dist1_8)
    FILTER(?dist1_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x9, 2) + POW(?y1 - ?y9, 2)) AS ?dist1_9)
    FILTER(?dist1_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x3, 2) + POW(?y2 - ?y3, 2)) AS ?dist2_3)
    FILTER(?dist2_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x4, 2) + POW(?y2 - ?y4, 2)) AS ?dist2_4)
    FILTER(?dist2_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x5, 2) + POW(?y2 - ?y5, 2)) AS ?dist2_5)
    FILTER(?dist2_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x6, 2) + POW(?y2 - ?y6, 2)) AS ?dist2_6)
    FILTER(?dist2_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x7, 2) + POW(?y2 - ?y7, 2)) AS ?dist2_7)
    FILTER(?dist2_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x8, 2) + POW(?y2 - ?y8, 2)) AS ?dist2_8)
    FILTER(?dist2_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x9, 2) + POW(?y2 - ?y9, 2)) AS ?dist2_9)
    FILTER(?dist2_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x4, 2) + POW(?y3 - ?y4, 2)) AS ?dist3_4)
    FILTER(?dist3_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x5, 2) + POW(?y3 - ?y5, 2)) AS ?dist3_5)
    FILTER(?dist3_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x6, 2) + POW(?y3 - ?y6, 2)) AS ?dist3_6)
    FILTER(?dist3_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x7, 2) + POW(?y3 - ?y7, 2)) AS ?dist3_7)
    FILTER(?dist3_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x8, 2) + POW(?y3 - ?y8, 2)) AS ?dist3_8)
    FILTER(?dist3_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x9, 2) + POW(?y3 - ?y9, 2)) AS ?dist3_9)
    FILTER(?dist3_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x5, 2) + POW(?y4 - ?y5, 2)) AS ?dist4_5)
    FILTER(?dist4_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x6, 2) + POW(?y4 - ?y6, 2)) AS ?dist4_6)
    FILTER(?dist4_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x7, 2) + POW(?y4 - ?y7, 2)) AS ?dist4_7)
    FILTER(?dist4_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x8, 2) + POW(?y4 - ?y8, 2)) AS ?dist4_8)
    FILTER(?dist4_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x9, 2) + POW(?y4 - ?y9, 2)) AS ?dist4_9)
    FILTER(?dist4_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x6, 2) + POW(?y5 - ?y6, 2)) AS ?dist5_6)
    FILTER(?dist5_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x7, 2) + POW(?y5 - ?y7, 2)) AS ?dist5_7)
    FILTER(?dist5_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x8, 2) + POW(?y5 - ?y8, 2)) AS ?dist5_8)
    FILTER(?dist5_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x9, 2) + POW(?y5 - ?y9, 2)) AS ?dist5_9)
    FILTER(?dist5_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x7, 2) + POW(?y6 - ?y7, 2)) AS ?dist6_7)
    FILTER(?dist6_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x8, 2) + POW(?y6 - ?y8, 2)) AS ?dist6_8)
    FILTER(?dist6_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x9, 2) + POW(?y6 - ?y9, 2)) AS ?dist6_9)
    FILTER(?dist6_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x7 - ?x8, 2) + POW(?y7 - ?y8, 2)) AS ?dist7_8)
    FILTER(?dist7_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x7 - ?x9, 2) + POW(?y7 - ?y9, 2)) AS ?dist7_9)
    FILTER(?dist7_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x8 - ?x9, 2) + POW(?y8 - ?y9, 2)) AS ?dist8_9)
    FILTER(?dist8_9 < 50)
    
    # Calculate center coordinates
    BIND(AVG(?x0, ?x1, ?x2, ?x3, ?x4, ?x5, ?x6, ?x7, ?x8, ?x9) AS ?centerX)
    BIND(AVG(?y0, ?y1, ?y2, ?y3, ?y4, ?y5, ?y6, ?y7, ?y8, ?y9) AS ?centerY)
    
    # Calculate radius of the cell
    BIND(MAX(?dist0_1, ?dist0_2, ?dist0_3, ?dist0_4, ?dist0_5, ?dist0_6, ?dist0_7, ?dist0_8, ?dist0_9, ?dist1_2, ?dist1_3, ?dist1_4, ?dist1_5, ?dist1_6, ?dist1_7, ?dist1_8, ?dist1_9, ?dist2_3, ?dist2_4, ?dist2_5, ?dist2_6, ?dist2_7, ?dist2_8, ?dist2_9, ?dist3_4, ?dist3_5, ?dist3_6, ?dist3_7, ?dist3_8, ?dist3_9, ?dist4_5, ?dist4_6, ?dist4_7, ?dist4_8, ?dist4_9, ?dist5_6, ?dist5_7, ?dist5_8, ?dist5_9, ?dist6_7, ?dist6_8, ?dist6_9, ?dist7_8, ?dist7_9, ?dist8_9) AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_2

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of NRXN1 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NRXN1" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_3

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of RORA and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "RORA" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_4

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of NRG3 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NRG3" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_5

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of GPM6A and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "GPM6A" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_6

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of CTNNA2 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "CTNNA2" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_7

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of NPAS3 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NPAS3" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_8

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of SLC1A2 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "SLC1A2" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_9

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of PCDH9 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "PCDH9" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_10

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of LSAMP and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "LSAMP" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes_pair_11

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Atrocyte based on co-expression of NRXN1 and LSAMP
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Atrocyte ;
         cell:hasConfidence 0.9975806451612903 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NRXN1" .
    ?gene2 cell:hasGeneID "LSAMP" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_clique_1

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on clique of 10 co-expressed genes
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 0.9 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
         
    # Connect to all spatial points
    ?cell cell:includesSpatialPoint ?spatialPoint0 .
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
    ?cell cell:includesSpatialPoint ?spatialPoint3 .
    ?cell cell:includesSpatialPoint ?spatialPoint4 .
    ?cell cell:includesSpatialPoint ?spatialPoint5 .
    ?cell cell:includesSpatialPoint ?spatialPoint6 .
    ?cell cell:includesSpatialPoint ?spatialPoint7 .
    ?cell cell:includesSpatialPoint ?spatialPoint8 .
    ?cell cell:includesSpatialPoint ?spatialPoint9 .
    
}
WHERE {
    # Gene identifiers
        ?gene0 cell:hasGeneID ?gene0ID .
    ?gene1 cell:hasGeneID ?gene1ID .
    ?gene2 cell:hasGeneID ?gene2ID .
    ?gene3 cell:hasGeneID ?gene3ID .
    ?gene4 cell:hasGeneID ?gene4ID .
    ?gene5 cell:hasGeneID ?gene5ID .
    ?gene6 cell:hasGeneID ?gene6ID .
    ?gene7 cell:hasGeneID ?gene7ID .
    ?gene8 cell:hasGeneID ?gene8ID .
    ?gene9 cell:hasGeneID ?gene9ID .

    # Gene ID filters
    FILTER(?gene0ID = "CTNNA2" && ?gene1ID = "GPM6A" && ?gene2ID = "LRP1B" && ?gene3ID = "LSAMP" && ?gene4ID = "MALAT1" && ?gene5ID = "NPAS3" && ?gene6ID = "NRG3" && ?gene7ID = "NRXN1" && ?gene8ID = "PCDH9" && ?gene9ID = "SLC1A2")
    
    # Spatial points for each gene
    
    ?spatialPoint0 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene0 ;
                     cell:hasXCoordinate ?x0 ;
                     cell:hasYCoordinate ?y0 .
    
    ?spatialPoint1 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene1 ;
                     cell:hasXCoordinate ?x1 ;
                     cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene2 ;
                     cell:hasXCoordinate ?x2 ;
                     cell:hasYCoordinate ?y2 .
    
    ?spatialPoint3 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene3 ;
                     cell:hasXCoordinate ?x3 ;
                     cell:hasYCoordinate ?y3 .
    
    ?spatialPoint4 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene4 ;
                     cell:hasXCoordinate ?x4 ;
                     cell:hasYCoordinate ?y4 .
    
    ?spatialPoint5 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene5 ;
                     cell:hasXCoordinate ?x5 ;
                     cell:hasYCoordinate ?y5 .
    
    ?spatialPoint6 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene6 ;
                     cell:hasXCoordinate ?x6 ;
                     cell:hasYCoordinate ?y6 .
    
    ?spatialPoint7 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene7 ;
                     cell:hasXCoordinate ?x7 ;
                     cell:hasYCoordinate ?y7 .
    
    ?spatialPoint8 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene8 ;
                     cell:hasXCoordinate ?x8 ;
                     cell:hasYCoordinate ?y8 .
    
    ?spatialPoint9 a cell:SpatialDataPoint ;
                     cell:expressesGene ?gene9 ;
                     cell:hasXCoordinate ?x9 ;
                     cell:hasYCoordinate ?y9 .
    
    # Distance constraints
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x1, 2) + POW(?y0 - ?y1, 2)) AS ?dist0_1)
    FILTER(?dist0_1 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x2, 2) + POW(?y0 - ?y2, 2)) AS ?dist0_2)
    FILTER(?dist0_2 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x3, 2) + POW(?y0 - ?y3, 2)) AS ?dist0_3)
    FILTER(?dist0_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x4, 2) + POW(?y0 - ?y4, 2)) AS ?dist0_4)
    FILTER(?dist0_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x5, 2) + POW(?y0 - ?y5, 2)) AS ?dist0_5)
    FILTER(?dist0_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x6, 2) + POW(?y0 - ?y6, 2)) AS ?dist0_6)
    FILTER(?dist0_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x7, 2) + POW(?y0 - ?y7, 2)) AS ?dist0_7)
    FILTER(?dist0_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x8, 2) + POW(?y0 - ?y8, 2)) AS ?dist0_8)
    FILTER(?dist0_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x0 - ?x9, 2) + POW(?y0 - ?y9, 2)) AS ?dist0_9)
    FILTER(?dist0_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist1_2)
    FILTER(?dist1_2 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x3, 2) + POW(?y1 - ?y3, 2)) AS ?dist1_3)
    FILTER(?dist1_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x4, 2) + POW(?y1 - ?y4, 2)) AS ?dist1_4)
    FILTER(?dist1_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x5, 2) + POW(?y1 - ?y5, 2)) AS ?dist1_5)
    FILTER(?dist1_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x6, 2) + POW(?y1 - ?y6, 2)) AS ?dist1_6)
    FILTER(?dist1_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x7, 2) + POW(?y1 - ?y7, 2)) AS ?dist1_7)
    FILTER(?dist1_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x8, 2) + POW(?y1 - ?y8, 2)) AS ?dist1_8)
    FILTER(?dist1_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x9, 2) + POW(?y1 - ?y9, 2)) AS ?dist1_9)
    FILTER(?dist1_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x3, 2) + POW(?y2 - ?y3, 2)) AS ?dist2_3)
    FILTER(?dist2_3 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x4, 2) + POW(?y2 - ?y4, 2)) AS ?dist2_4)
    FILTER(?dist2_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x5, 2) + POW(?y2 - ?y5, 2)) AS ?dist2_5)
    FILTER(?dist2_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x6, 2) + POW(?y2 - ?y6, 2)) AS ?dist2_6)
    FILTER(?dist2_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x7, 2) + POW(?y2 - ?y7, 2)) AS ?dist2_7)
    FILTER(?dist2_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x8, 2) + POW(?y2 - ?y8, 2)) AS ?dist2_8)
    FILTER(?dist2_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x2 - ?x9, 2) + POW(?y2 - ?y9, 2)) AS ?dist2_9)
    FILTER(?dist2_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x4, 2) + POW(?y3 - ?y4, 2)) AS ?dist3_4)
    FILTER(?dist3_4 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x5, 2) + POW(?y3 - ?y5, 2)) AS ?dist3_5)
    FILTER(?dist3_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x6, 2) + POW(?y3 - ?y6, 2)) AS ?dist3_6)
    FILTER(?dist3_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x7, 2) + POW(?y3 - ?y7, 2)) AS ?dist3_7)
    FILTER(?dist3_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x8, 2) + POW(?y3 - ?y8, 2)) AS ?dist3_8)
    FILTER(?dist3_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x3 - ?x9, 2) + POW(?y3 - ?y9, 2)) AS ?dist3_9)
    FILTER(?dist3_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x5, 2) + POW(?y4 - ?y5, 2)) AS ?dist4_5)
    FILTER(?dist4_5 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x6, 2) + POW(?y4 - ?y6, 2)) AS ?dist4_6)
    FILTER(?dist4_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x7, 2) + POW(?y4 - ?y7, 2)) AS ?dist4_7)
    FILTER(?dist4_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x8, 2) + POW(?y4 - ?y8, 2)) AS ?dist4_8)
    FILTER(?dist4_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x4 - ?x9, 2) + POW(?y4 - ?y9, 2)) AS ?dist4_9)
    FILTER(?dist4_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x6, 2) + POW(?y5 - ?y6, 2)) AS ?dist5_6)
    FILTER(?dist5_6 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x7, 2) + POW(?y5 - ?y7, 2)) AS ?dist5_7)
    FILTER(?dist5_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x8, 2) + POW(?y5 - ?y8, 2)) AS ?dist5_8)
    FILTER(?dist5_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x5 - ?x9, 2) + POW(?y5 - ?y9, 2)) AS ?dist5_9)
    FILTER(?dist5_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x7, 2) + POW(?y6 - ?y7, 2)) AS ?dist6_7)
    FILTER(?dist6_7 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x8, 2) + POW(?y6 - ?y8, 2)) AS ?dist6_8)
    FILTER(?dist6_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x6 - ?x9, 2) + POW(?y6 - ?y9, 2)) AS ?dist6_9)
    FILTER(?dist6_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x7 - ?x8, 2) + POW(?y7 - ?y8, 2)) AS ?dist7_8)
    FILTER(?dist7_8 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x7 - ?x9, 2) + POW(?y7 - ?y9, 2)) AS ?dist7_9)
    FILTER(?dist7_9 < 50)
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x8 - ?x9, 2) + POW(?y8 - ?y9, 2)) AS ?dist8_9)
    FILTER(?dist8_9 < 50)
    
    # Calculate center coordinates
    BIND(AVG(?x0, ?x1, ?x2, ?x3, ?x4, ?x5, ?x6, ?x7, ?x8, ?x9) AS ?centerX)
    BIND(AVG(?y0, ?y1, ?y2, ?y3, ?y4, ?y5, ?y6, ?y7, ?y8, ?y9) AS ?centerY)
    
    # Calculate radius of the cell
    BIND(MAX(?dist0_1, ?dist0_2, ?dist0_3, ?dist0_4, ?dist0_5, ?dist0_6, ?dist0_7, ?dist0_8, ?dist0_9, ?dist1_2, ?dist1_3, ?dist1_4, ?dist1_5, ?dist1_6, ?dist1_7, ?dist1_8, ?dist1_9, ?dist2_3, ?dist2_4, ?dist2_5, ?dist2_6, ?dist2_7, ?dist2_8, ?dist2_9, ?dist3_4, ?dist3_5, ?dist3_6, ?dist3_7, ?dist3_8, ?dist3_9, ?dist4_5, ?dist4_6, ?dist4_7, ?dist4_8, ?dist4_9, ?dist5_6, ?dist5_7, ?dist5_8, ?dist5_9, ?dist6_7, ?dist6_8, ?dist6_9, ?dist7_8, ?dist7_9, ?dist8_9) AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_2

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of LRP1B and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "LRP1B" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_3

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of NRG3 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NRG3" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_4

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of NRXN1 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NRXN1" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_5

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of NPAS3 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "NPAS3" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_6

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of GPM6A and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "GPM6A" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_7

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of SLC1A2 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "SLC1A2" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_8

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of CTNNA2 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "CTNNA2" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_9

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of PCDH9 and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "PCDH9" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_10

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of LSAMP and MALAT1
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 1.0 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "LSAMP" .
    ?gene2 cell:hasGeneID "MALAT1" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


# Rule: Astrocytes1_pair_11

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX cell: <http://example.org/ontology/cell/>

# Rule for identifying Astrocytes1 based on co-expression of PCDH9 and LSAMP
CONSTRUCT {
    ?cell a cell:SpatialCell ;
         cell:hasCellType cell:Astrocytes1 ;
         cell:hasConfidence 0.999859392575928 ;
         cell:hasX ?centerX ;
         cell:hasY ?centerY ;
         cell:hasRadius ?radius .
    
    ?cell cell:includesSpatialPoint ?spatialPoint1 .
    ?cell cell:includesSpatialPoint ?spatialPoint2 .
}
WHERE {
    # Gene identifiers
    ?gene1 cell:hasGeneID "PCDH9" .
    ?gene2 cell:hasGeneID "LSAMP" .
    
    # Spatial points for each gene
    ?spatialPoint1 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene1 ;
                   cell:hasXCoordinate ?x1 ;
                   cell:hasYCoordinate ?y1 .
    
    ?spatialPoint2 a cell:SpatialDataPoint ;
                   cell:expressesGene ?gene2 ;
                   cell:hasXCoordinate ?x2 ;
                   cell:hasYCoordinate ?y2 .
    
    # Ensure points are close to each other (within 50 units)
    BIND(SQRT(POW(?x1 - ?x2, 2) + POW(?y1 - ?y2, 2)) AS ?dist)
    FILTER(?dist < 50)
    
    # Calculate center coordinates
    BIND((?x1 + ?x2) / 2 AS ?centerX)
    BIND((?y1 + ?y2) / 2 AS ?centerY)
    
    # Set radius
    BIND(?dist / 2 AS ?radius)
    
    # Create a unique cell identifier
    BIND(URI(CONCAT("http://example.org/data/astrocyte/cell_", STRUUID())) AS ?cell)
}


